name: Check for pom.xml Version Upgrade

on:
  workflow_call:
    inputs:
      base-branch:
        description: 'Base branch for the comparison'
        required: true
        type: string
    secrets:
      TOKEN:
        required: true

jobs:
  check-version-upgrade:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Reset APT Sources
        run: |
          sudo rm -f /etc/apt/sources.list.d/*
          sudo sed -i 's|mirror+file:/etc/apt/apt-mirrors.txt|http://archive.ubuntu.com/ubuntu|g' /etc/apt/sources.list
          sudo apt-get update

      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2
          xmllint --version

      - name: üõ†Ô∏è Fetch All Branch
        run: |
          git fetch --unshallow || true
          git fetch origin ${{ inputs.base-branch }} --depth=1

      - name: ‚ö†Ô∏è Validate for pom.xml is Modified
        id: check_pom
        run: |
          echo "Checking for pom.xml changes..."
          if git diff --name-only origin/${{ inputs.base-branch }}...HEAD | grep -q "pom.xml"; then
            echo "‚úÖ pom.xml is modified."
            echo "pom_modified=true" >> $GITHUB_ENV
          else
            echo "üö® pom.xml is not modified."
            echo "pom_modified=false" >> $GITHUB_ENV
          fi

      - name: üõ†Ô∏è Fetch PR Version from pom.xml
        if: env.pom_modified == 'true'
        id: pr_version
        run: |
          PR_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml || echo "")
          if [ -z "$PR_VERSION" ]; then
            echo "üö® Failed to extract PR version from pom.xml."
            exit 1
          else
            echo "pr_version=$PR_VERSION" >> $GITHUB_ENV
          fi

      - name: üõ†Ô∏è Fetch Base Branch and get version
        if: env.pom_modified == 'true'
        id: base_version
        run: |
          git fetch origin ${{ inputs.base-branch }}
          git checkout ${{ inputs.base-branch }}
          BASE_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml || echo "")
          if [ -z "$BASE_VERSION" ]; then
            echo "üö® Failed to extract Base version from pom.xml."
            exit 1
          else
            echo "base_version=$BASE_VERSION" >> $GITHUB_ENV
          fi
          git checkout -

      - name: üö® Comment if pom.xml is Not Modified
        if: env.pom_modified == 'false'
        run: |
          PR_OWNER="@${{ github.event.pull_request.user.login }}"
          COMMENT="üö® Hi $PR_OWNER **pom.xml is not modified!** This PR must update the \`pom.xml\` version before merging."
          gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
            --method POST \
            --field body="$COMMENT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚áÜ Compare Versions & Comment if Not Updated
        if: env.pom_modified == 'true'
        run: |
          PR_OWNER="@${{ github.event.pull_request.user.login }}"
          if [ "$pr_version" == "$base_version" ]; then
            COMMENT="üö® Hi $PR_OWNER **Version in pom.xml has not been updated!** Please update the version before merging this PR.  
            ‚ö†Ô∏è **Current version:** \`$base_version\`  
            üöÄ **Expected new version:** Should be incremented."
            gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
              --method POST \
              --field body="$COMMENT"
            exit 1
          else
            echo "‚úÖ Version is upgraded to $pr_version."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
